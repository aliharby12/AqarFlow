import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { MapPin, Calculator, FileText, AlertCircle } from "lucide-react";
import { useMutation } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";

interface LandPlanningFormProps {
  onPlanGenerated: (plan: any) => void;
}

export default function LandPlanningForm({ onPlanGenerated }: LandPlanningFormProps) {
  const [formData, setFormData] = useState({
    landArea: "",
    deedType: "",
    currentUse: "",
    proposedUse: "",
    city: "",
    neighborhood: "",
    planningLevel: "",
    specialRequirements: "",
    budget: ""
  });

  // ุชูุงุตูู ุฃููุงุน ุงูุตููู ูุงูุงุดุชุฑุงุทุงุช ุงููุงููููุฉ
  const deedTypeDetails = {
    "raw": {
      name: "ุฃุฑุถ ุฎุงู",
      description: "ุฃุฑุถ ุบูุฑ ูุทูุฑุฉ ุจุฏูู ุฎุฏูุงุช ุฃุณุงุณูุฉ",
      priceRange: "60-90 ุฑ.ุณ/ูยฒ",
      requirements: [
        "ููุงููุฉ ูู ุงูุจูุฏูุฉ ุนูู ููุน ุงูุงุณุชุฎุฏุงู",
        "ุฏุฑุงุณุฉ ุฌููุชูููุฉ ููุชุฑุจุฉ",
        "ุชูููู ุงูุฃุซุฑ ุงูุจูุฆู (ุฅู ูุฒู ุงูุฃูุฑ)",
        "ุฎุทุฉ ุงูุตุฑู ูุงูููุงู"
      ]
    },
    "agricultural": {
      name: "ุตู ุฒุฑุงุนู", 
      description: "ุฃุฑุถ ูุฎุตุตุฉ ููุฃูุดุทุฉ ุงูุฒุฑุงุนูุฉ ูุงูุซุฑูุฉ ุงูุญููุงููุฉ",
      priceRange: "70-120 ุฑ.ุณ/ูยฒ",
      requirements: [
        "ููุงููุฉ ูุฒุงุฑุฉ ุงูุจูุฆุฉ ูุงูููุงู ูุงูุฒุฑุงุนุฉ",
        "ุฏุฑุงุณุฉ ุฌูุฏุฉ ุงูุชุฑุจุฉ ูุงูููุงู ุงูุฌูููุฉ",
        "ุฎุทุฉ ุงูุฑู ูุงูุตุฑู ุงูุฒุฑุงุนู",
        "ุงุดุชุฑุงุทุงุช ุงููุณุงูุงุช ูู ุงูููุงุทู ุงูุณูููุฉ"
      ]
    },
    "light_industrial": {
      name: "ุตูุงุนู ุฎููู",
      description: "ุฃุฑุถ ููุตูุงุนุงุช ุงูุฎูููุฉ ุบูุฑ ุงููููุซุฉ",
      priceRange: "120-180 ุฑ.ุณ/ูยฒ", 
      requirements: [
        "ุชุฑุฎูุต ูู ูุฒุงุฑุฉ ุงูุตูุงุนุฉ ูุงูุซุฑูุฉ ุงููุนุฏููุฉ",
        "ุฏุฑุงุณุฉ ุงูุฃุซุฑ ุงูุจูุฆู ูุงูุณูุงูุฉ",
        "ุงุดุชุฑุงุทุงุช ุงูุญูุงูุฉ ูู ุงูุญุฑุงุฆู",
        "ุฎุทุฉ ุฅุฏุงุฑุฉ ุงูููุงูุงุช ุงูุตูุงุนูุฉ",
        "ูุณุงูุงุช ุฃูุงู ูู ุงูููุงุทู ุงูุณูููุฉ (50ู ุนูู ุงูุฃูู)"
      ]
    },
    "heavy_industrial": {
      name: "ุตูุงุนู ุซููู",
      description: "ุฃุฑุถ ููุตูุงุนุงุช ุงูุซูููุฉ ูุงููููุงููุฉ",
      priceRange: "180-250 ุฑ.ุณ/ูยฒ",
      requirements: [
        "ุชุฑุฎูุต ูู ูุฒุงุฑุฉ ุงูุตูุงุนุฉ ูุงูููุฆุฉ ุงูุนุงูุฉ ููุงุณุชุซูุงุฑ",
        "ุฏุฑุงุณุฉ ุชูููู ุงูุฃุซุฑ ุงูุจูุฆู ุงูููุตูุฉ",
        "ุฎุทุฉ ุงูุทูุงุฑุฆ ูุงูุณูุงูุฉ ุงูุตูุงุนูุฉ",
        "ูุธุงู ูุนุงูุฌุฉ ุงูููุงูุงุช ูุงูุงูุจุนุงุซุงุช",
        "ูุณุงูุงุช ุฃูุงู ูู ุงูููุงุทู ุงูุณูููุฉ (500ู ุนูู ุงูุฃูู)",
        "ููุงููุฉ ุงูุฏูุงุน ุงููุฏูู ูุงูููุงู ุงูุฃุญูุฑ"
      ]
    }
  };

  // ุชูุงุตูู ุฃููุงุน ุงูุชุฎุทูุท
  const planningTypeDetails = {
    "mixed_residential": {
      name: "ูุฎุทุท ุณููู ูุฎุชูุท",
      description: "ูุฌูุน ุจูู ุงูุณูู ูุงูุฎุฏูุงุช ุงูุชุฌุงุฑูุฉ ุงูุจุณูุทุฉ",
      requirements: [
        "ูุซุงูุฉ ุณูุงููุฉ: 150-250 ูุณูุฉ/ููุชุงุฑ",
        "ูุณุจุฉ ุงูุจูุงุก: 60-70%", 
        "ุงุฑุชุฏุงุฏ ุฃุฏูู: 3 ุฃูุชุงุฑ ูู ุฌููุน ุงูุฌูุงุช",
        "ูุณุงุญุฉ ุฎุถุฑุงุก: 15% ูู ุฅุฌูุงูู ุงููุณุงุญุฉ",
        "ููุงูู ุณูุงุฑุงุช: ูููู ูุงุญุฏ ููู ูุญุฏุฉ ุณูููุฉ",
        "ุฎุฏูุงุช ุชุฌุงุฑูุฉ: ุจุญุฏ ุฃูุตู 20% ูู ุงููุณุงุญุฉ"
      ]
    },
    "residential_commercial": {
      name: "ูุฎุทุท ุณููู ุชุฌุงุฑู",
      description: "ูุฑูุฒ ุนูู ุงูุชุทููุฑ ุงูุชุฌุงุฑู ูุน ุงูุณูู",
      requirements: [
        "ูุซุงูุฉ ุณูุงููุฉ: 100-180 ูุณูุฉ/ููุชุงุฑ",
        "ูุณุจุฉ ุงูุจูุงุก: 70-80%",
        "ุงุฑุชุฏุงุฏ ุฃุฏูู: 5 ุฃูุชุงุฑ ูู ุงูุดูุงุฑุน ุงูุฑุฆูุณูุฉ",
        "ูุณุงุญุฉ ุชุฌุงุฑูุฉ: 30-50% ูู ุงููุณุงุญุฉ ุงูุฅุฌูุงููุฉ", 
        "ููุงูู ุณูุงุฑุงุช: ููููุงู ููู ูุญุฏุฉ ุชุฌุงุฑูุฉ",
        "ุทุฑู ุจุนุฑุถ ูุง ููู ุนู 20 ูุชุฑ ููุดูุงุฑุน ุงูุชุฌุงุฑูุฉ"
      ]
    },
    "agricultural_planning": {
      name: "ูุฎุทุท ุฒุฑุงุนู",
      description: "ูุฎุตุต ููุฃูุดุทุฉ ุงูุฒุฑุงุนูุฉ ูุงูุซุฑูุฉ ุงูุญููุงููุฉ",
      requirements: [
        "ูุซุงูุฉ ุจูุงุก ููุฎูุถุฉ: 10-25%",
        "ูุณุงูุฉ 100 ูุชุฑ ุจูู ุงููุญุฏุงุช ุงูุฒุฑุงุนูุฉ",
        "ุดุจูุฉุฑู ูุชุทูุฑุฉ ูุฎุฒุงูุงุช ููุงู",
        "ุทุฑู ุฒุฑุงุนูุฉ ุจุนุฑุถ 8-12 ูุชุฑ",
        "ููุงุทู ุชุฎุฒูู ุงููุนุฏุงุช ูุงููุญุงุตูู",
        "ูุธุงู ุตุฑู ุงูููุงู ุงูุฒุฑุงุนูุฉ"
      ]
    }
  };

  const { toast } = useToast();

  const generatePlanMutation = useMutation({
    mutationFn: async (data: typeof formData) => {
      const response = await fetch("/api/land-planning", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });
      
      if (!response.ok) {
        throw new Error("ูุดู ูู ุฅูุดุงุก ูุฎุทุท ุงูุฃุฑุถ");
      }
      
      const result = await response.json();
      return result.plan;
    },
    onSuccess: (data) => {
      onPlanGenerated(data);
      toast({
        title: "ุชู ุฅูุดุงุก ูุฎุทุท ุงูุฃุฑุถ ุจูุฌุงุญ! ๐ฏ",
        description: "ุชู ุฅูุดุงุก ูุฎุทุท ุดุงูู ูุน ูุงูู ุงูุงุดุชุฑุงุทุงุช ูุงูุชุณุนูุฑ",
      });
    },
    onError: (error) => {
      toast({
        variant: "destructive",
        title: "ุฎุทุฃ ูู ุฅูุดุงุก ุงููุฎุทุท",
        description: error instanceof Error ? error.message : "ุญุฏุซ ุฎุทุฃ ุบูุฑ ูุชููุน",
      });
    },
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!formData.landArea || !formData.deedType || !formData.proposedUse || !formData.planningLevel) {
      toast({
        variant: "destructive",
        title: "ุจูุงูุงุช ูุงูุตุฉ",
        description: "ูุฑุฌู ุชุนุจุฆุฉ ุฌููุน ุงูุญููู ุงููุทููุจุฉ",
      });
      return;
    }
    generatePlanMutation.mutate(formData);
  };

  const handleInputChange = (field: keyof typeof formData, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  return (
    <Card className="shadow-lg border-2 border-green-200 bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-950 dark:to-emerald-950">
      <CardHeader>
        <CardTitle className="flex items-center gap-3 text-green-800 dark:text-green-200">
          <div className="p-2 bg-green-600 rounded-lg">
            <MapPin className="h-6 w-6 text-white" />
          </div>
          ูููุฐุฌ ุชุฎุทูุท ููุฑุฒ ุงูุฃุฑุงุถู
        </CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Land Information */}
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-2">
              <Label htmlFor="landArea" className="text-green-700 dark:text-green-300 font-medium">
                ูุณุงุญุฉ ุงูุฃุฑุถ (ูุชุฑ ูุฑุจุน) *
              </Label>
              <Input
                id="landArea"
                type="number"
                placeholder="ูุซุงู: 10000"
                value={formData.landArea}
                onChange={(e) => handleInputChange("landArea", e.target.value)}
                className="border-green-300 focus:border-green-500"
                data-testid="input-land-area"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="deedType" className="text-green-700 dark:text-green-300 font-medium">
                ููุน ุงูุตู *
              </Label>
              <Select value={formData.deedType} onValueChange={(value) => handleInputChange("deedType", value)}>
                <SelectTrigger className="border-green-300 focus:border-green-500" data-testid="select-deed-type">
                  <SelectValue placeholder="ุงุฎุชุฑ ููุน ุงูุตู" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="raw">ุฃุฑุถ ุฎุงู</SelectItem>
                  <SelectItem value="agricultural">ุตู ุฒุฑุงุนู</SelectItem>
                  <SelectItem value="light_industrial">ุตูุงุนู ุฎููู</SelectItem>
                  <SelectItem value="heavy_industrial">ุตูุงุนู ุซููู</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          {/* Current and Proposed Use */}
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-2">
              <Label htmlFor="currentUse" className="text-green-700 dark:text-green-300 font-medium">
                ุงูุงุณุชุฎุฏุงู ุงูุญุงูู
              </Label>
              <Select value={formData.currentUse} onValueChange={(value) => handleInputChange("currentUse", value)}>
                <SelectTrigger className="border-green-300 focus:border-green-500" data-testid="select-current-use">
                  <SelectValue placeholder="ุงุฎุชุฑ ุงูุงุณุชุฎุฏุงู ุงูุญุงูู" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="vacant">ุฃุฑุถ ูุถุงุก</SelectItem>
                  <SelectItem value="farming">ุฒุฑุงุนุฉ</SelectItem>
                  <SelectItem value="livestock">ููุงุดู</SelectItem>
                  <SelectItem value="storage">ูุฎุงุฒู</SelectItem>
                  <SelectItem value="mixed">ุงุณุชุฎุฏุงู ูุฎุชูุท</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <Label htmlFor="proposedUse" className="text-green-700 dark:text-green-300 font-medium">
                ุงูุงุณุชุฎุฏุงู ุงูููุชุฑุญ *
              </Label>
              <Select value={formData.proposedUse} onValueChange={(value) => handleInputChange("proposedUse", value)}>
                <SelectTrigger className="border-green-300 focus:border-green-500" data-testid="select-proposed-use">
                  <SelectValue placeholder="ุงุฎุชุฑ ุงูุงุณุชุฎุฏุงู ุงูููุชุฑุญ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="mixed_residential">ูุฎุทุท ุณููู ูุฎุชูุท</SelectItem>
                  <SelectItem value="residential_commercial">ูุฎุทุท ุณููู ุชุฌุงุฑู</SelectItem>
                  <SelectItem value="agricultural_planning">ูุฎุทุท ุฒุฑุงุนู</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          {/* Location */}
          <div className="grid md:grid-cols-2 gap-6">
            <div className="space-y-2">
              <Label htmlFor="city" className="text-green-700 dark:text-green-300 font-medium">
                ุงููุฏููุฉ
              </Label>
              <Select value={formData.city} onValueChange={(value) => handleInputChange("city", value)}>
                <SelectTrigger className="border-green-300 focus:border-green-500" data-testid="select-city">
                  <SelectValue placeholder="ุงุฎุชุฑ ุงููุฏููุฉ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="riyadh">ุงูุฑูุงุถ</SelectItem>
                  <SelectItem value="jeddah">ุฌุฏุฉ</SelectItem>
                  <SelectItem value="dammam">ุงูุฏูุงู</SelectItem>
                  <SelectItem value="mecca">ููุฉ ุงูููุฑูุฉ</SelectItem>
                  <SelectItem value="medina">ุงููุฏููุฉ ุงููููุฑุฉ</SelectItem>
                  <SelectItem value="taif">ุงูุทุงุฆู</SelectItem>
                  <SelectItem value="khobar">ุงูุฎุจุฑ</SelectItem>
                  <SelectItem value="other">ุฃุฎุฑู</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <Label htmlFor="neighborhood" className="text-green-700 dark:text-green-300 font-medium">
                ุงูุญู ุฃู ุงูููุทูุฉ
              </Label>
              <Input
                id="neighborhood"
                placeholder="ูุซุงู: ุญู ุงููุงุณููู"
                value={formData.neighborhood}
                onChange={(e) => handleInputChange("neighborhood", e.target.value)}
                className="border-green-300 focus:border-green-500"
                data-testid="input-neighborhood"
              />
            </div>
          </div>

          {/* ุนุฑุถ ุชูุงุตูู ููุน ุงูุตู */}
          {formData.deedType && deedTypeDetails[formData.deedType as keyof typeof deedTypeDetails] && (
            <div className="bg-blue-50 dark:bg-blue-950 border border-blue-200 rounded-lg p-4">
              <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">
                ๐ ุชูุงุตูู {deedTypeDetails[formData.deedType as keyof typeof deedTypeDetails].name}
              </h4>
              <p className="text-sm text-blue-700 dark:text-blue-300 mb-2">
                {deedTypeDetails[formData.deedType as keyof typeof deedTypeDetails].description}
              </p>
              <div className="flex items-center gap-2 mb-3">
                <Badge className="bg-green-100 text-green-800 border-green-300">
                  ๐ฐ {deedTypeDetails[formData.deedType as keyof typeof deedTypeDetails].priceRange}
                </Badge>
              </div>
              <div>
                <h5 className="font-medium text-blue-800 dark:text-blue-200 mb-2">ุงูุงุดุชุฑุงุทุงุช ุงููุงููููุฉ ุงููุทููุจุฉ:</h5>
                <ul className="text-xs text-blue-700 dark:text-blue-300 space-y-1">
                  {deedTypeDetails[formData.deedType as keyof typeof deedTypeDetails].requirements.map((req, index) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-green-600">โ</span>
                      {req}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          )}

          {/* ุนุฑุถ ุชูุงุตูู ููุน ุงูุชุฎุทูุท */}
          {formData.proposedUse && planningTypeDetails[formData.proposedUse as keyof typeof planningTypeDetails] && (
            <div className="bg-purple-50 dark:bg-purple-950 border border-purple-200 rounded-lg p-4">
              <h4 className="font-semibold text-purple-800 dark:text-purple-200 mb-2">
                ๐๏ธ ุชูุงุตูู {planningTypeDetails[formData.proposedUse as keyof typeof planningTypeDetails].name}
              </h4>
              <p className="text-sm text-purple-700 dark:text-purple-300 mb-3">
                {planningTypeDetails[formData.proposedUse as keyof typeof planningTypeDetails].description}
              </p>
              <div>
                <h5 className="font-medium text-purple-800 dark:text-purple-200 mb-2">ุงููุชุทูุจุงุช ูุงููุนุงููุฑ:</h5>
                <ul className="text-xs text-purple-700 dark:text-purple-300 space-y-1">
                  {planningTypeDetails[formData.proposedUse as keyof typeof planningTypeDetails].requirements.map((req, index) => (
                    <li key={index} className="flex items-start gap-2">
                      <span className="text-blue-600">โก</span>
                      {req}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          )}

          {/* Planning Level */}
          <div className="space-y-2">
            <Label htmlFor="planningLevel" className="text-green-700 dark:text-green-300 font-medium">
              ูุณุชูู ุงูุชุฎุทูุท ุงููุทููุจ *
            </Label>
            <Select value={formData.planningLevel} onValueChange={(value) => handleInputChange("planningLevel", value)}>
              <SelectTrigger className="border-green-300 focus:border-green-500" data-testid="select-planning-level">
                <SelectValue placeholder="ุงุฎุชุฑ ูุณุชูู ุงูุชุฎุทูุท" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="basic">ุชุฎุทูุท ุจุฏุงุฆู (60-90 ุฑูุงู/ูยฒ)</SelectItem>
                <SelectItem value="standard">ุชุฎุทูุท ูุชูุณุท (120-180 ุฑูุงู/ูยฒ)</SelectItem>
                <SelectItem value="premium">ุชุฎุทูุท ูุงุฎุฑ (200-250 ุฑูุงู/ูยฒ)</SelectItem>
              </SelectContent>
            </Select>
          </div>

          {/* Budget */}
          <div className="space-y-2">
            <Label htmlFor="budget" className="text-green-700 dark:text-green-300 font-medium">
              ุงูููุฒุงููุฉ ุงููุชููุนุฉ (ุงุฎุชูุงุฑู)
            </Label>
            <Input
              id="budget"
              placeholder="ูุซุงู: 500,000 ุฑูุงู"
              value={formData.budget}
              onChange={(e) => handleInputChange("budget", e.target.value)}
              className="border-green-300 focus:border-green-500"
              data-testid="input-budget"
            />
          </div>

          {/* Special Requirements */}
          <div className="space-y-2">
            <Label htmlFor="specialRequirements" className="text-green-700 dark:text-green-300 font-medium">
              ูุชุทูุจุงุช ุฎุงุตุฉ ุฃู ููุงุญุธุงุช
            </Label>
            <Textarea
              id="specialRequirements"
              placeholder="ูุซุงู: ูุทููุจ ูุณุงุญุงุช ุฎุถุฑุงุก ูุจูุฑุฉุ ูุฌูุฏ ูุณุฌุฏุ ูุฑุจ ูู ุงููุฏุงุฑุณ..."
              value={formData.specialRequirements}
              onChange={(e) => handleInputChange("specialRequirements", e.target.value)}
              className="border-green-300 focus:border-green-500 min-h-20"
              data-testid="textarea-special-requirements"
            />
          </div>

          {/* Important Note */}
          <div className="bg-amber-50 dark:bg-amber-950 border border-amber-200 rounded-lg p-4">
            <div className="flex items-start gap-3">
              <AlertCircle className="h-5 w-5 text-amber-600 mt-0.5" />
              <div>
                <h4 className="font-semibold text-amber-800 dark:text-amber-200 mb-1">
                  ูุนูููุงุช ูููุฉ
                </h4>
                <p className="text-sm text-amber-700 dark:text-amber-300">
                  ุณูุชู ุฅูุดุงุก ูุฎุทุท ุดุงูู ูุชุถูู ุฌููุน ุงูุงุดุชุฑุงุทุงุช ุงูุญููููุฉ ูุงูุฎุฏูุงุช ุงูุฃุณุงุณูุฉ (ุงูุจูุฏูุฉุ ุงูููุฑุจุงุกุ ุงูููุงูุ ุงูุงุชุตุงูุงุช) 
                  ูุน ุชุณุนูุฑ ุชูุตููู ุจุซูุงุซ ุฎูุงุฑุงุช ูููุงู ูููุนุงููุฑ ุงูุณุนูุฏูุฉ.
                </p>
              </div>
            </div>
          </div>

          {/* Submit Button */}
          <Button
            type="submit"
            disabled={generatePlanMutation.isPending}
            className="w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white py-3 text-lg"
            data-testid="button-generate-plan"
          >
            {generatePlanMutation.isPending ? (
              <div className="flex items-center gap-2">
                <div className="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" />
                ุฌุงุฑู ุฅูุดุงุก ุงููุฎุทุท...
              </div>
            ) : (
              <div className="flex items-center gap-2">
                <Calculator className="h-5 w-5" />
                ุฅูุดุงุก ูุฎุทุท ุงูุฃุฑุถ ุงูุดุงูู
              </div>
            )}
          </Button>
        </form>
      </CardContent>
    </Card>
  );
}